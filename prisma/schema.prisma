// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id                  Int                  @id @default(autoincrement())
  name                String
  email               String               @unique
  enrollmentNumber    String               @unique
  batch               Batch                @relation(fields: [batchId], references: [id])
  batchId             Int
  academicPerformances AcademicPerformance[]
  hackathonParticipations HackathonParticipation[]
  paperPresentations  PaperPresentation[]
  coreCoursesExcellence CoreCoursePerformance[]
  overallScore        Float                @default(0)
  rank                Int?
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
}

model Batch {
  id        Int       @id @default(autoincrement())
  year      Int
  semester  String
  students  Student[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@unique([year, semester])
}

model AcademicPerformance {
  id        Int      @id @default(autoincrement())
  student   Student  @relation(fields: [studentId], references: [id])
  studentId Int
  semester  Int
  gpa       Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([studentId, semester])
}

model HackathonParticipation {
  id        Int      @id @default(autoincrement())
  student   Student  @relation(fields: [studentId], references: [id])
  studentId Int
  name      String
  level     HackathonLevel
  rank      Int?
  date      DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum HackathonLevel {
  LOCAL
  NATIONAL
  INTERNATIONAL
}

model PaperPresentation {
  id        Int      @id @default(autoincrement())
  student   Student  @relation(fields: [studentId], references: [id])
  studentId Int
  title     String
  conference String
  date      DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CoreCoursePerformance {
  id        Int      @id @default(autoincrement())
  student   Student  @relation(fields: [studentId], references: [id])
  studentId Int
  course    Course   @relation(fields: [courseId], references: [id])
  courseId  Int
  grade     Float
  semester  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([studentId, courseId, semester])
}

model Course {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  isCore    Boolean  @default(false)
  performances CoreCoursePerformance[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}